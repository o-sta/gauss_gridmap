#!/usr/bin/env python
PACKAGE = "exdata"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("mean_x", double_t, 0, "A double parameter", 0, -20.0, 20.0)
gen.add("mean_y", double_t, 0, "A double parameter", 0, -20.0, 20.0)
gen.add("covariance_x1y1", double_t, 0, "A double parameter", 1, -20.0, 20.0)
gen.add("covariance_x1y2", double_t, 0, "A double parameter", 1, -20.0, 20.0)
gen.add("covariance_x2y1", double_t, 0, "A double parameter", 1, -20.0, 20.0)
gen.add("covariance_x2y2", double_t, 0, "A double parameter", 1, -20.0, 20.0)
gen.add("qw", double_t, 0, "A double parameter", 0, -20.0, 20.0)
gen.add("qx", double_t, 0, "A double parameter", 1, -20.0, 20.0)
gen.add("qy", double_t, 0, "A double parameter", 1, -20.0, 20.0)
gen.add("qz", double_t, 0, "A double parameter", 1, -20.0, 20.0)
gen.add("ox", double_t, 0, "A double parameter", 0, -20.0, 20.0)
gen.add("oy", double_t, 0, "A double parameter", 0, -20.0, 20.0)
gen.add("oz", double_t, 0, "A double parameter", 0, -20.0, 20.0)
gen.add("value", double_t, 0, "A double parameter", 0, -200.0, 200.0)

# sample
# gen.add("str_param", str_t, 0, "A string parameter", "Hello World")
# gen.add("bool_param", bool_t, 0, "A Boolean parameter", True)
# size_enum = gen.enum([ gen.const("Small", int_t, 0, "A small constant"),
#                   gen.const("Medium", int_t, 1, "A medium constant"),
#                   gen.const("Large", int_t, 2, "A large constant"),
#                   gen.const("ExtraLarge", int_t, 3, "An extra large constant") ],
#                   "An enum to set size")
# gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "exdata", "mapGenerater"))